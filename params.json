{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","tagline":"Rethink the Learning Management System","body":"### What is APPYnotebook?\r\nAPPYnotebook is a next generation Learning Management System (LMS). The traditional LMS is defined by a common set of features such as calendars, assignment submission, discussion boards...etc. In other words traditional LMS tools are primarily focused on administration of courses. APPYnotebook takes a different, it is architected around three concerns:\r\n\r\n1. Content\r\nAt the architectual base of APPYnotebook sits a content management systems. This allows users to dynamically create content in the form of pages. These pages can take various forms ranging from whiteboard canvas, text editor to PDF or powerpoint imports.\r\n2. Apps\r\nAbove the content managment system sits a Javascript based App platform. In fact with the exception of some basic functionality everything that makes APPYnotebook interested would be delivered in the form of Apps. APPYnotebook comes with a fully functional App development environment so that Apps can be developed, tested and deployed all on the same platform.\r\n3. Collaboration\r\nAPPYnotebook contains message that can be used for all sorts of collaboration, from shared white-boarding to IM type messaging.\r\n\r\n\r\n<div id=\"dock-4fdc439ad904927956c4eb77de0811df\"></div><script type=\"text/javascript\" src=\"http://hadron.appynotebook.com/embed/4fdc439ad904927956c4eb77de0811df?width=1160&height=570\"></script>\r\n\r\n\r\nWhile APPYnotebook is built on the J2EE platform, all functionality is driven primarily by browser based technology. The application is fully ajax based, it makes use of the latest advances in browser technology such as HTML5.\r\n\r\n\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.","name":"APPYnotebook"}